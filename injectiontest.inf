!% -~S

Constant USEINJECT;

Include "globals.h";
Include "puny.h";

Array ina1 -> 20 't' 'a' 'k' 'e' ' ' 'b' 'o' 'o' 'k' 's' 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1; 
Array ina2 -> 20 'g' 'r' 'e' 'e' 'n' 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1; 
Array par1 -> 4 2 11 12 4 0 13 14 5 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1; 
Array par2 -> 4 1 15 16 5 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1; 

Array InjectArgs --> 7;
[DumbSub _i;
  print "You grunt with all your might and heaven the phone booth onto your shoulders.
	For a moment or two it looks as if you're not going to be able to lift it.";
!  print "a a a a a a a a a a a a a a a a a a a aa a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a xx";
	print "Routine size is ", 2 * (WordAddress - _InjectInputAndParseArray), " bytes.^";

	print "^ina1: "; for(_i = 0 : _i < 20 : _i++) print ina1 -> _i, " ";
	print "^ina2: "; for(_i = 0 : _i < 20 : _i++) print ina2 -> _i, " ";
	print "^par1: "; for(_i = 0 : _i < 20 : _i++) print par1 -> _i, " ";
	print "^par2: "; for(_i = 0 : _i < 20 : _i++) print par2 -> _i, " ";
	print "^^";
  
	InjectArgs-->0 = ina2;
	InjectArgs-->1 = ina1;
	InjectArgs-->2 = par2;
	InjectArgs-->3 = par1;
	InjectArgs-->4 = 1;
	InjectArgs-->5 = 2;
	InjectArgs-->6 = 1;
	_i = _InjectInputAndParseArray(InjectArgs);
	if(_i == false) print "Inject failed!^";
	print "^ina1: "; for(_i = 0 : _i < 20 : _i++) print ina1 -> _i, " ";
	print "^ina2: "; for(_i = 0 : _i < 20 : _i++) print ina2 -> _i, " ";
	print "^par1: "; for(_i = 0 : _i < 20 : _i++) print par1 -> _i, " ";
	print "^par2: "; for(_i = 0 : _i < 20 : _i++) print par2 -> _i, " ";
	rtrue;
	
  
  <<Insert Box Box>>;
  print "OOPA";
  PrintMsg(MSG_YOU_HAVE_WON); rtrue;
  print "OOPA1";
  return PrintMsg(MSG_YOU_HAVE_WON);
  print "OOPA2";
];

![ _InjectInputAndParseArray p_param_array
!		_src_input_array _dst_input_array 
!		_src_parse_array _dst_parse_array 
!		_src_start_word _dst_start_word _word_count 


Verb 'dumb'
  * -> Dumb;

Object Library "The Library"
  with
    description "You are in a library.",
  has light;

Object -> Box "box"
  with
    name 'box',
  has container open;


[Initialise;
  location = Library;
  print "^^Type ~dumb~ to test...^^";
];
